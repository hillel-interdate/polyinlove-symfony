<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ZodiacRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ZodiacRepository extends EntityRepository
{
    public function getZodiacByDate($date = null){
        if (!is_object($date) && get_class($date) != 'DateTime')
            return null;

        $timestamp = $date->getTimestamp();

        $zodiac[356] = 1;
        $zodiac[326] = 2;
        $zodiac[296] = 3;
        $zodiac[266] = 4;
        $zodiac[235] = 5;
        $zodiac[204] = 6;
        $zodiac[172] = 7;
        $zodiac[141] = 8;
        $zodiac[110] = 9;
        $zodiac[80]  = 10;
        $zodiac[50]  = 11;
        $zodiac[20]  = 12;
        $zodiac[0]   = 1;
        $dayOfTheYear = date("z",$timestamp) + 1;
        $isLeapYear = date("L",$timestamp);
        if ($isLeapYear && ($dayOfTheYear > 59)) $dayOfTheYear = $dayOfTheYear - 1;
        foreach($zodiac as $day => $signId) if ($dayOfTheYear >= $day) break;
        return $this->find($signId);
    }





    public function testGetZodiacByDate($date = null){
        if (!is_object($date) && get_class($date) != 'DateTime')
            return null;

        $timestamp = $date->getTimestamp();

        $zodiac[356] = 1;
        $zodiac[326] = 2;
        $zodiac[296] = 3;
        $zodiac[266] = 4;
        $zodiac[235] = 5;
        $zodiac[203] = 6;
        $zodiac[172] = 7;
        $zodiac[140] = 8;
        $zodiac[111] = 9;
        $zodiac[78]  = 10;
        $zodiac[51]  = 11;
        $zodiac[20]  = 12;
        $zodiac[0]   = 1;
        $dayOfTheYear = date("z",$timestamp) + 1;
        $isLeapYear = date("L",$timestamp);
//        var_dump($dayOfTheYear, $isLeapYear);die;
        if ($isLeapYear && ($dayOfTheYear > 59)) $dayOfTheYear = $dayOfTheYear - 1;
        foreach($zodiac as $day => $signId) {
//
            var_dump($dayOfTheYear); echo '<br><br>';
            if ($dayOfTheYear >= $day) {
                var_dump($day,$signId);
//                var_dump('end;stor;');
                break;
            }
        }


        return $this->find($signId);
    }

}
