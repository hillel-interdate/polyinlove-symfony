<script>
    $(document).ready(function () {
        $('.registration2-btn').click(function () {
            $('.registration2-popup').modal('show');
        })
    })
</script>
{% if errors %}


    <div class="errors">
        <div class="ui orange message">
            <div class="content">
                <div class="header">
                    {% trans %}  Please complete the following fields {% endtrans %}
                </div>
                <p>
                    {% if errors_text | length > 0 %}
                <ul>
                    {% for error in errors_text %}
                        <li>{{ error }}</li>
                    {% endfor %}
                </ul>
                {% endif %}
                </p>
            </div>
        </div>
    </div>
{% endif %}

<div class="hmaformsec two">


    <div class="field {% if form.country.vars.errors|length or errors_text['country'] is defined %}error{% endif %}">
        <div class="label">{{ form_label(form.country) }}</div>
        <div class="select">{{ form_widget(form.country) }}</div>
    </div>

    <script>
        window.onload = function () {

            // when a country is selected, only regions of that country are displayed
            const countryInput = document.getElementById('profile_two_country');
            const regionInput = document.getElementById('profile_two_region');
            const cityInput = document.getElementById('profile_two_city');

            const regionChanged = (changeEvent, level, elem) => {
                const initSelection = elem.value
                // console.log('initial value is ' + initSelection)
                fetch('/open_api/v1/' + level + '/' + changeEvent.target.value)
                    .then(response => response.json())
                    .then(res => {
                        elem.replaceChildren(
                            ...res.map(option => {
                                const optionElement = document.createElement('option');
                                optionElement.value = option.id;
                                optionElement.setAttribute('data-uw-styling-context', 'true');
                                if (optionElement.value == initSelection) optionElement.selected = true
                                optionElement.innerText = option.name;
                                return optionElement;
                            }));
                        const chooseOption = document.createElement('option');
                        chooseOption.value = "";
                        chooseOption.setAttribute('data-uw-styling-context', 'true');
                        chooseOption.innerText = 'Choose';
                        elem.prepend(chooseOption);

                        if ('cities' === level) {
                            document.querySelector('#myDropdown>ul').replaceChildren(
                                ...res.map(option => {
                                    const optionElement = document.createElement('li');
                                    optionElement.setAttribute('data-value', option.id);
                                    optionElement.setAttribute('data-uw-styling-context', 'true');
                                    optionElement.innerText = option.name;
                                    return optionElement;
                                }));
                            const chooseLi = document.createElement('li');
                            chooseLi.setAttribute('data-value', '');
                            chooseLi.setAttribute('data-uw-styling-context', 'true');
                            chooseLi.innerText = 'Choose';
                            document.querySelector('#myDropdown>ul').prepend(chooseLi);
                        }
                    });
            }
            countryInput.addEventListener('change', eve => regionChanged(eve, 'regions', regionInput))
            regionInput.addEventListener('change', eve => regionChanged(eve, 'cities', cityInput))

            regionChanged({target:countryInput}, 'regions', regionInput, true)
            regionChanged({target:regionInput }, 'cities', cityInput, true)
        }
    </script>

    <div class="field">
        <div class="label">{{ form_label(form.region) }}</div>
        <div class="select">{{ form_widget(form.region) }}</div>
    </div>

    <div class="field">
        <div class="label">{{ form_label(form.city) }}</div>
        {#        {% if not mobile %} #}
        <div class="select">{{ form_widget(form.city) }}</div>
        {#        {% else %} #}
        {#            <div class="select" style="display: none">{{ form_widget(form.city) }}</div> #}
        {#            <div class="cityDropdown" onclick="myFunction()"> #}
        {#                <span class="choicedText"></span> #}
        {#                <div id="myDropdown" class="dropdown-content"> #}
        {#                    <input type="text" placeholder="search..." id="myInput" onkeyup="filterFunction()"> #}
        {#                    <ul> #}
        {#                        {% for choice in form.city.vars['choices'] %} #}
        {#                            <li data-value="{{ choice.value }}"> {{ choice.label }}</li> #}
        {#                        {% endfor %} #}
        {#                        <li class="hidden noResults"> {% trans %} no results {% endtrans %} </li> #}
        {#                    </ul> #}
        {#                </div> #}
        {#            </div> #}
        {#        {% endif %} #}
    </div>

    <div class="field ">
        <div class="label">{{ form_label(form.zipCode) }}</div>
        <div class="inputdiv">{{ form_widget(form.zipCode) }}</div>
    </div>

    <div class="field {% if form.height.vars.errors|length or errors_text['height'] is defined %}error{% endif %}">
        <div class="label">{{ form_label(form.height) }}</div>
        <div class="inputdiv">{{ form_widget(form.height) }}</div>
    </div>

    <div class="field">
        <div class="label">{{ form_label(form.body) }}</div>
        <div class="select">{{ form_widget(form.body) }}</div>
    </div>

    <div class="field">
        <div class="label">{{ form_label(form.relationshipStatus) }}</div>
        <div class="select">{{ form_widget(form.relationshipStatus) }}</div>
    </div>

    <div class="field" style="position: relative">
        <div class="label">{{ form_label(form.relationshipType) }}</div>
        {% if  mobile %}
            <input type="button" class="registration2-btn" value="?">
        {% endif %}
        <div class="select"
             style="margin-top: 10px; {% if mobile %} width: 90%; margin-left: 5px;{% endif %}">{{ form_widget(form.relationshipType) }}</div>
        {% if not mobile %}
            <input type="button" class="registration2-btn" style="width: 4%;" value="?">
        {% endif %}
    </div>

    <div class="field">
        <div class="label">{{ form_label(form.sexOrientation) }}</div>
        <div class="select">{{ form_widget(form.sexOrientation) }}</div>
    </div>

    <div class="field {% if form.lookingFor.vars.errors|length %}error{% endif %}">
        <div class="label">{{ form_label(form.lookingFor) }}</div>
    </div>

    <div class="field for-label">

        <div class="checkboxes">
            {% for lookingFor in form.lookingFor %}
                <div class="ui checkbox chkbox">
                    {{ form_widget(lookingFor) }}
                    {{ form_label(lookingFor) }}
                </div>
                {% if loop.index == 4 %}
                    <div class="clr"></div>
                {% endif %}

            {% endfor %}
        </div>
    </div>

    <div class="field">
        <div class="label">{{ form_label(form.origin) }}</div>
        <div class="select">{{ form_widget(form.origin) }}</div>
    </div>

    <div class="field">
        <div class="label">{{ form_label(form.smoking) }}</div>
        <div class="select">{{ form_widget(form.smoking) }}</div>
    </div>

</div>
<div class="ui modal registration2-popup">
    <div class="header">{{ site_name }} - about relationships
        {% if not mobile %}
{#            <img src="/images/logo.png" alt="" style="#}
{#    float: left;#}
{#    width: 18%;#}
">
        {% endif %}
    </div>
    <div class="content">
        <ul class="ui list">
            {% trans %}
                <li>
                    <b>Hierarchical polyamory</b> - A relationship where there is a main couple, often marriage, and
                    within that secondary relationships</b>
                </li>
                <li>
                    <b>A-hierarchical polyamory</b>
                    - All relationships are of the same status, there is no primary and secondary relationships.
                </li>
                <li>
                    <b>Solo poly</b> - A polyamory person who lives alone, and is not intrested in sharing a home with a
                    partner.
                </li>
                <li>
                    <b>Relationship anarchy</b>
                    - All partners are of equal importance
                </li>
                <li>
                    <b>Third in a triad</b> - A polyamory person who joins an established partnership, and has a romantic relationship with
                    one more of the partners in the couple.
                </li>
            {% endtrans %}
        </ul>
    </div>
    <div class="actions">
        <div class="ui cancel button red">{% trans %} Cancel {% endtrans %}</div>
    </div>
</div>
{# <script src="/js/getCities.js" type="text/javascript"></script> #}
<script>
    var myDropdowm = $('#myDropdown');

    /* When the user clicks on the button,
    toggle between hiding and showing the dropdown content */
    function myFunction() {
        myDropdowm.addClass('show')
        $('.hiddenContainer').css({'display': 'block'});
        // document.getElementById("myDropdown").classList.toggle("show");
    }

    // function filterFunction() {
    //     var isResult = false;
    //     var input, filter, ul, li, a, i;
    //     input = document.getElementById("myInput");
    //     filter = input.value.toUpperCase();
    //     div = document.getElementById("myDropdown");
    //     a = div.getElementsByTagName("li");
    //     var noResults = $('.cityDropdown li.noResults');
    //     for (i = 0; i < a.length; i++) {
    //         txtValue = a[i].textContent || a[i].innerText;
    //         if (txtValue.toUpperCase().indexOf(filter) > -1) {
    //             a[i].style.display = "";
    //             if (!noResults.hasClass('.hidden')) {
    //                 noResults.addClass('hidden')
    //             }
    //             isResult = true;
    //         } else {
    //             a[i].style.display = "none";
    //         }
    //     }
    //
    //     if (!isResult) {
    //         noResults.removeClass('hidden')
    //     }
    // }

    // $('.cityDropdown li').click(function () {
    //     myDropdowm.removeClass('show')
    //     $('.choicedText').text($(this).text())
    //
    //     $('#profile_two_city').val($(this).attr('data-value'))
    //     $('.hiddenContainer').css({'display': 'none'});
    //     return false;
    // })

    $('.hiddenContainer').click(function () {
        myDropdowm.removeClass('show')
        $('.hiddenContainer').css({'display': 'none'});
    })

</script>
